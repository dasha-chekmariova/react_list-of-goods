{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","el","goodsFromServer","selectList","App","state","activeButton","list","selectValue","this","className","type","onClick","setState","reverse","sort","a","b","localeCompare","length","value","onChange","event","filter","currentTarget","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,mCACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BAAcA,GAALA,WCNXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IASzCC,E,4MACJC,MAAQ,CACNN,MAAM,GAAD,OAAMG,GACXI,cAAc,EACdC,KAAK,GAAD,OAAMJ,GACVK,YAAa,G,4CAGf,WAAU,IAAD,OACP,EAKIC,KAAKJ,MAJPN,EADF,EACEA,MACAO,EAFF,EAEEA,aACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,YAGF,OACE,8BACE,sBAAKE,UAAWJ,EACZ,MACA,YAFJ,UAIE,wBACEK,KAAK,SACLD,UAAWJ,EACP,4BACA,6BACJM,QAAS,WACP,OAAO,EAAKC,SAAS,CAAEP,cAAeA,KAN1C,SASGA,EACG,OACA,UAGLA,EACG,cAAC,EAAD,CAAWP,MAAOA,IAClB,KAEHO,EAEG,qCACE,wBACEK,KAAK,SACLD,UAAU,0BACVE,QAAS,kBACP,EAAKC,SAAS,CAAEd,MAAO,YAAIA,GAAOe,aAJtC,qBAUA,wBACEH,KAAK,SACLD,UAAU,0BACVE,QAAS,kBACP,EAAKC,SACH,CAAEd,MAAO,YAAIA,GAAOgB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,SALzD,iCAYA,wBACEN,KAAK,SACLD,UAAU,0BACVE,QAAS,kBACP,EAAKC,SACH,CACEd,MAAM,GAAD,OAAMG,GACXK,KAAK,GAAD,OAAMJ,GACVK,YAAa,KARrB,mBAgBA,wBACEG,KAAK,SACLD,UAAU,0BACVE,QAAS,kBACP,EAAKC,SACH,CAAEd,MAAO,YAAIA,GAAOgB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,aALtD,4BAWA,8CAGA,wBACET,UAAU,iBACVU,MAAOZ,EACPa,SAAU,SAACC,GACT,EAAKT,SACH,CACEd,MAAO,UAAIG,GAAiBqB,QAAO,SAAAtB,GAAE,OACnCA,EAAGkB,SAAWG,EAAME,cAAcJ,SACpCZ,aAAcc,EAAME,cAAcJ,SAR1C,SAaG,YAAIb,GAAMP,KAAI,SAAAC,GACb,OACE,wBAAQmB,MAAK,UAAKnB,GAAlB,SACGA,YAOX,c,GAtHIwB,IAAMC,WA+HTtB,I,MCrJfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.82f3d07c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <>\n    <ul>\n      {goods.map((el: string) => (\n        <li key={el}>{el}</li>\n      ))}\n    </ul>\n  </>\n);\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst selectList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ntype State = {\n  goods: string[],\n  activeButton: boolean,\n  list: number[],\n  selectValue: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    activeButton: false,\n    list: [...selectList],\n    selectValue: 1,\n  };\n\n  render() {\n    const {\n      goods,\n      activeButton,\n      list,\n      selectValue,\n    } = this.state;\n\n    return (\n      <div>\n        <div className={activeButton\n          ? 'App'\n          : 'App-start'}\n        >\n          <button\n            type=\"button\"\n            className={activeButton\n              ? 'button is-danger is-light'\n              : 'button is-success is-light'}\n            onClick={() => {\n              return this.setState({ activeButton: !activeButton });\n            }}\n          >\n            {activeButton\n              ? 'Hide'\n              : 'Start'}\n          </button>\n\n          {activeButton\n            ? <GoodsList goods={goods} />\n            : null}\n\n          {activeButton\n            ? (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"button is-info is-light\"\n                  onClick={() => (\n                    this.setState({ goods: [...goods].reverse() })\n                  )}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-info is-light\"\n                  onClick={() => (\n                    this.setState(\n                      { goods: [...goods].sort((a, b) => a.localeCompare(b)) },\n                    )\n                  )}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-info is-light\"\n                  onClick={() => (\n                    this.setState(\n                      {\n                        goods: [...goodsFromServer],\n                        list: [...selectList],\n                        selectValue: 1,\n                      },\n                    )\n                  )}\n                >\n                  Reset\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-info is-light\"\n                  onClick={() => (\n                    this.setState(\n                      { goods: [...goods].sort((a, b) => a.length - b.length) },\n                    )\n                  )}\n                >\n                  Sort by length\n                </button>\n                <p>\n                  Choose length\n                </p>\n                <select\n                  className=\"select is-info\"\n                  value={selectValue}\n                  onChange={(event) => {\n                    this.setState(\n                      {\n                        goods: [...goodsFromServer].filter(el => (\n                          el.length >= +event.currentTarget.value)),\n                        selectValue: +event.currentTarget.value,\n                      },\n                    );\n                  }}\n                >\n                  {[...list].map(el => {\n                    return (\n                      <option value={`${el}`}>\n                        {el}\n                      </option>\n                    );\n                  })}\n                </select>\n              </>\n            )\n            : null}\n\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}